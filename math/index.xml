<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on Manuel</title>
    <link>https://mssh.dev/math/</link>
    <description>Recent content in Math on Manuel</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright> </copyright>
    <lastBuildDate>Tue, 29 Mar 2022 18:55:10 +0200</lastBuildDate><atom:link href="https://mssh.dev/math/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Random thoughts[1]: The relation between proper folds and monoids</title>
      <link>https://mssh.dev/math/2020-08-27-random-thoughts/</link>
      <pubDate>Thu, 27 Aug 2020 18:34:10 +0200</pubDate>
      
      <guid>https://mssh.dev/math/2020-08-27-random-thoughts/</guid>
      <description>What is a folding? A lot of programming languages have a built-in function similar to Haskells fold(l/r). While the specifics vary between different languages, the general idea is to apply a binary operation to the elements of some iterable / recursive data structure, thereby &amp;ldquo;combining&amp;rdquo; the elements to a new object. A typical signature of such a function looks similar to the type of foldl in Haskell:
foldl :: Foldable t =&amp;gt; (b -&amp;gt; a -&amp;gt; b) -&amp;gt; b -&amp;gt; t a -&amp;gt; b A common use case of foldl would lead to the following:</description>
    </item>
    
  </channel>
</rss>
